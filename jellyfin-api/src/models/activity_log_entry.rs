/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ActivityLogEntry : An activity log entry.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActivityLogEntry {
    /// Gets or sets the identifier.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// Gets or sets the name.
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Gets or sets the overview.
    #[serde(rename = "Overview", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub overview: Option<Option<String>>,
    /// Gets or sets the short overview.
    #[serde(rename = "ShortOverview", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub short_overview: Option<Option<String>>,
    /// Gets or sets the type.
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Gets or sets the item identifier.
    #[serde(rename = "ItemId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<Option<String>>,
    /// Gets or sets the date.
    #[serde(rename = "Date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// Gets or sets the user identifier.
    #[serde(rename = "UserId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<uuid::Uuid>,
    /// Gets or sets the user primary image tag.
    #[serde(rename = "UserPrimaryImageTag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_primary_image_tag: Option<Option<String>>,
    /// Gets or sets the log severity.
    #[serde(rename = "Severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<models::LogLevel>,
}

impl ActivityLogEntry {
    /// An activity log entry.
    pub fn new() -> ActivityLogEntry {
        ActivityLogEntry {
            id: None,
            name: None,
            overview: None,
            short_overview: None,
            r#type: None,
            item_id: None,
            date: None,
            user_id: None,
            user_primary_image_tag: None,
            severity: None,
        }
    }
}

