/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LiveTvServiceInfo : Class ServiceInfo.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LiveTvServiceInfo {
    /// Gets or sets the name.
    #[serde(rename = "Name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Gets or sets the home page URL.
    #[serde(rename = "HomePageUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub home_page_url: Option<Option<String>>,
    /// Gets or sets the status.
    #[serde(rename = "Status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::LiveTvServiceStatus>,
    /// Gets or sets the status message.
    #[serde(rename = "StatusMessage", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub status_message: Option<Option<String>>,
    /// Gets or sets the version.
    #[serde(rename = "Version", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub version: Option<Option<String>>,
    /// Gets or sets a value indicating whether this instance has update available.
    #[serde(rename = "HasUpdateAvailable", skip_serializing_if = "Option::is_none")]
    pub has_update_available: Option<bool>,
    /// Gets or sets a value indicating whether this instance is visible.
    #[serde(rename = "IsVisible", skip_serializing_if = "Option::is_none")]
    pub is_visible: Option<bool>,
    #[serde(rename = "Tuners", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tuners: Option<Option<Vec<String>>>,
}

impl LiveTvServiceInfo {
    /// Class ServiceInfo.
    pub fn new() -> LiveTvServiceInfo {
        LiveTvServiceInfo {
            name: None,
            home_page_url: None,
            status: None,
            status_message: None,
            version: None,
            has_update_available: None,
            is_visible: None,
            tuners: None,
        }
    }
}

