/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PluginInfo : This is a serializable stub class that is used by the api to provide information about installed plugins.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PluginInfo {
    /// Gets or sets the name.
    #[serde(rename = "Name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Gets or sets the version.
    #[serde(rename = "Version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// Gets or sets the name of the configuration file.
    #[serde(rename = "ConfigurationFileName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub configuration_file_name: Option<Option<String>>,
    /// Gets or sets the description.
    #[serde(rename = "Description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Gets or sets the unique id.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    /// Gets or sets a value indicating whether the plugin can be uninstalled.
    #[serde(rename = "CanUninstall", skip_serializing_if = "Option::is_none")]
    pub can_uninstall: Option<bool>,
    /// Gets or sets a value indicating whether this plugin has a valid image.
    #[serde(rename = "HasImage", skip_serializing_if = "Option::is_none")]
    pub has_image: Option<bool>,
    /// Gets or sets a value indicating the status of the plugin.
    #[serde(rename = "Status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::PluginStatus>,
}

impl PluginInfo {
    /// This is a serializable stub class that is used by the api to provide information about installed plugins.
    pub fn new() -> PluginInfo {
        PluginInfo {
            name: None,
            version: None,
            configuration_file_name: None,
            description: None,
            id: None,
            can_uninstall: None,
            has_image: None,
            status: None,
        }
    }
}

