/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CodecType {
    #[serde(rename = "Video")]
    Video,
    #[serde(rename = "VideoAudio")]
    VideoAudio,
    #[serde(rename = "Audio")]
    Audio,

}

impl std::fmt::Display for CodecType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Video => write!(f, "Video"),
            Self::VideoAudio => write!(f, "VideoAudio"),
            Self::Audio => write!(f, "Audio"),
        }
    }
}

impl Default for CodecType {
    fn default() -> CodecType {
        Self::Video
    }
}

