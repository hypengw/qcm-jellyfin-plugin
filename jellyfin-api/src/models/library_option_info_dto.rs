/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LibraryOptionInfoDto : Library option info dto.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LibraryOptionInfoDto {
    /// Gets or sets name.
    #[serde(rename = "Name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Gets or sets a value indicating whether default enabled.
    #[serde(rename = "DefaultEnabled", skip_serializing_if = "Option::is_none")]
    pub default_enabled: Option<bool>,
}

impl LibraryOptionInfoDto {
    /// Library option info dto.
    pub fn new() -> LibraryOptionInfoDto {
        LibraryOptionInfoDto {
            name: None,
            default_enabled: None,
        }
    }
}

