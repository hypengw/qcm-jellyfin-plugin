/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BrandingOptions : The branding options.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BrandingOptions {
    /// Gets or sets the login disclaimer.
    #[serde(rename = "LoginDisclaimer", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub login_disclaimer: Option<Option<String>>,
    /// Gets or sets the custom CSS.
    #[serde(rename = "CustomCss", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub custom_css: Option<Option<String>>,
    /// Gets or sets a value indicating whether to enable the splashscreen.
    #[serde(rename = "SplashscreenEnabled", skip_serializing_if = "Option::is_none")]
    pub splashscreen_enabled: Option<bool>,
}

impl BrandingOptions {
    /// The branding options.
    pub fn new() -> BrandingOptions {
        BrandingOptions {
            login_disclaimer: None,
            custom_css: None,
            splashscreen_enabled: None,
        }
    }
}

