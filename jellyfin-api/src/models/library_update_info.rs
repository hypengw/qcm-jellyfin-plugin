/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LibraryUpdateInfo : Class LibraryUpdateInfo.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LibraryUpdateInfo {
    /// Gets or sets the folders added to.
    #[serde(rename = "FoldersAddedTo", skip_serializing_if = "Option::is_none")]
    pub folders_added_to: Option<Vec<String>>,
    /// Gets or sets the folders removed from.
    #[serde(rename = "FoldersRemovedFrom", skip_serializing_if = "Option::is_none")]
    pub folders_removed_from: Option<Vec<String>>,
    /// Gets or sets the items added.
    #[serde(rename = "ItemsAdded", skip_serializing_if = "Option::is_none")]
    pub items_added: Option<Vec<String>>,
    /// Gets or sets the items removed.
    #[serde(rename = "ItemsRemoved", skip_serializing_if = "Option::is_none")]
    pub items_removed: Option<Vec<String>>,
    /// Gets or sets the items updated.
    #[serde(rename = "ItemsUpdated", skip_serializing_if = "Option::is_none")]
    pub items_updated: Option<Vec<String>>,
    #[serde(rename = "CollectionFolders", skip_serializing_if = "Option::is_none")]
    pub collection_folders: Option<Vec<String>>,
    #[serde(rename = "IsEmpty", skip_serializing_if = "Option::is_none")]
    pub is_empty: Option<bool>,
}

impl LibraryUpdateInfo {
    /// Class LibraryUpdateInfo.
    pub fn new() -> LibraryUpdateInfo {
        LibraryUpdateInfo {
            folders_added_to: None,
            folders_removed_from: None,
            items_added: None,
            items_removed: None,
            items_updated: None,
            collection_folders: None,
            is_empty: None,
        }
    }
}

