/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PlaybackInfoResponse : Class PlaybackInfoResponse.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlaybackInfoResponse {
    /// Gets or sets the media sources.
    #[serde(rename = "MediaSources", skip_serializing_if = "Option::is_none")]
    pub media_sources: Option<Vec<models::MediaSourceInfo>>,
    /// Gets or sets the play session identifier.
    #[serde(rename = "PlaySessionId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub play_session_id: Option<Option<String>>,
    /// Gets or sets the error code.
    #[serde(rename = "ErrorCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub error_code: Option<Option<models::PlaybackErrorCode>>,
}

impl PlaybackInfoResponse {
    /// Class PlaybackInfoResponse.
    pub fn new() -> PlaybackInfoResponse {
        PlaybackInfoResponse {
            media_sources: None,
            play_session_id: None,
            error_code: None,
        }
    }
}

