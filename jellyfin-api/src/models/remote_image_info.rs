/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RemoteImageInfo : Class RemoteImageInfo.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoteImageInfo {
    /// Gets or sets the name of the provider.
    #[serde(rename = "ProviderName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub provider_name: Option<Option<String>>,
    /// Gets or sets the URL.
    #[serde(rename = "Url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub url: Option<Option<String>>,
    /// Gets or sets a url used for previewing a smaller version.
    #[serde(rename = "ThumbnailUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub thumbnail_url: Option<Option<String>>,
    /// Gets or sets the height.
    #[serde(rename = "Height", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub height: Option<Option<i32>>,
    /// Gets or sets the width.
    #[serde(rename = "Width", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub width: Option<Option<i32>>,
    /// Gets or sets the community rating.
    #[serde(rename = "CommunityRating", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub community_rating: Option<Option<f64>>,
    /// Gets or sets the vote count.
    #[serde(rename = "VoteCount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub vote_count: Option<Option<i32>>,
    /// Gets or sets the language.
    #[serde(rename = "Language", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub language: Option<Option<String>>,
    /// Gets or sets the type.
    #[serde(rename = "Type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::ImageType>,
    /// Gets or sets the type of the rating.
    #[serde(rename = "RatingType", skip_serializing_if = "Option::is_none")]
    pub rating_type: Option<models::RatingType>,
}

impl RemoteImageInfo {
    /// Class RemoteImageInfo.
    pub fn new() -> RemoteImageInfo {
        RemoteImageInfo {
            provider_name: None,
            url: None,
            thumbnail_url: None,
            height: None,
            width: None,
            community_rating: None,
            vote_count: None,
            language: None,
            r#type: None,
            rating_type: None,
        }
    }
}

