/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigImageTypes {
    #[serde(rename = "BackdropSizes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub backdrop_sizes: Option<Option<Vec<String>>>,
    #[serde(rename = "BaseUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub base_url: Option<Option<String>>,
    #[serde(rename = "LogoSizes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub logo_sizes: Option<Option<Vec<String>>>,
    #[serde(rename = "PosterSizes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub poster_sizes: Option<Option<Vec<String>>>,
    #[serde(rename = "ProfileSizes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub profile_sizes: Option<Option<Vec<String>>>,
    #[serde(rename = "SecureBaseUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub secure_base_url: Option<Option<String>>,
    #[serde(rename = "StillSizes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub still_sizes: Option<Option<Vec<String>>>,
}

impl ConfigImageTypes {
    pub fn new() -> ConfigImageTypes {
        ConfigImageTypes {
            backdrop_sizes: None,
            base_url: None,
            logo_sizes: None,
            poster_sizes: None,
            profile_sizes: None,
            secure_base_url: None,
            still_sizes: None,
        }
    }
}

