/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TrickplayInfo : An entity representing the metadata for a group of trickplay tiles.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TrickplayInfo {
    /// Gets or sets width of an individual thumbnail.
    #[serde(rename = "Width", skip_serializing_if = "Option::is_none")]
    pub width: Option<i32>,
    /// Gets or sets height of an individual thumbnail.
    #[serde(rename = "Height", skip_serializing_if = "Option::is_none")]
    pub height: Option<i32>,
    /// Gets or sets amount of thumbnails per row.
    #[serde(rename = "TileWidth", skip_serializing_if = "Option::is_none")]
    pub tile_width: Option<i32>,
    /// Gets or sets amount of thumbnails per column.
    #[serde(rename = "TileHeight", skip_serializing_if = "Option::is_none")]
    pub tile_height: Option<i32>,
    /// Gets or sets total amount of non-black thumbnails.
    #[serde(rename = "ThumbnailCount", skip_serializing_if = "Option::is_none")]
    pub thumbnail_count: Option<i32>,
    /// Gets or sets interval in milliseconds between each trickplay thumbnail.
    #[serde(rename = "Interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<i32>,
    /// Gets or sets peak bandwith usage in bits per second.
    #[serde(rename = "Bandwidth", skip_serializing_if = "Option::is_none")]
    pub bandwidth: Option<i32>,
}

impl TrickplayInfo {
    /// An entity representing the metadata for a group of trickplay tiles.
    pub fn new() -> TrickplayInfo {
        TrickplayInfo {
            width: None,
            height: None,
            tile_width: None,
            tile_height: None,
            thumbnail_count: None,
            interval: None,
            bandwidth: None,
        }
    }
}

