/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ClientCapabilitiesDto : Client capabilities dto.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientCapabilitiesDto {
    /// Gets or sets the list of playable media types.
    #[serde(rename = "PlayableMediaTypes", skip_serializing_if = "Option::is_none")]
    pub playable_media_types: Option<Vec<models::MediaType>>,
    /// Gets or sets the list of supported commands.
    #[serde(rename = "SupportedCommands", skip_serializing_if = "Option::is_none")]
    pub supported_commands: Option<Vec<models::GeneralCommandType>>,
    /// Gets or sets a value indicating whether session supports media control.
    #[serde(rename = "SupportsMediaControl", skip_serializing_if = "Option::is_none")]
    pub supports_media_control: Option<bool>,
    /// Gets or sets a value indicating whether session supports a persistent identifier.
    #[serde(rename = "SupportsPersistentIdentifier", skip_serializing_if = "Option::is_none")]
    pub supports_persistent_identifier: Option<bool>,
    /// Gets or sets the device profile.
    #[serde(rename = "DeviceProfile", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub device_profile: Option<Option<Box<models::DeviceProfile>>>,
    /// Gets or sets the app store url.
    #[serde(rename = "AppStoreUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub app_store_url: Option<Option<String>>,
    /// Gets or sets the icon url.
    #[serde(rename = "IconUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub icon_url: Option<Option<String>>,
}

impl ClientCapabilitiesDto {
    /// Client capabilities dto.
    pub fn new() -> ClientCapabilitiesDto {
        ClientCapabilitiesDto {
            playable_media_types: None,
            supported_commands: None,
            supports_media_control: None,
            supports_persistent_identifier: None,
            device_profile: None,
            app_store_url: None,
            icon_url: None,
        }
    }
}

