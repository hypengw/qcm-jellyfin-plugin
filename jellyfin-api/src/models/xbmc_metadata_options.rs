/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct XbmcMetadataOptions {
    #[serde(rename = "UserId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<Option<String>>,
    #[serde(rename = "ReleaseDateFormat", skip_serializing_if = "Option::is_none")]
    pub release_date_format: Option<String>,
    #[serde(rename = "SaveImagePathsInNfo", skip_serializing_if = "Option::is_none")]
    pub save_image_paths_in_nfo: Option<bool>,
    #[serde(rename = "EnablePathSubstitution", skip_serializing_if = "Option::is_none")]
    pub enable_path_substitution: Option<bool>,
    #[serde(rename = "EnableExtraThumbsDuplication", skip_serializing_if = "Option::is_none")]
    pub enable_extra_thumbs_duplication: Option<bool>,
}

impl XbmcMetadataOptions {
    pub fn new() -> XbmcMetadataOptions {
        XbmcMetadataOptions {
            user_id: None,
            release_date_format: None,
            save_image_paths_in_nfo: None,
            enable_path_substitution: None,
            enable_extra_thumbs_duplication: None,
        }
    }
}

