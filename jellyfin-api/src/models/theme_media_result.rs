/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ThemeMediaResult : Class ThemeMediaResult.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ThemeMediaResult {
    /// Gets or sets the items.
    #[serde(rename = "Items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::BaseItemDto>>,
    /// Gets or sets the total number of records available.
    #[serde(rename = "TotalRecordCount", skip_serializing_if = "Option::is_none")]
    pub total_record_count: Option<i32>,
    /// Gets or sets the index of the first record in Items.
    #[serde(rename = "StartIndex", skip_serializing_if = "Option::is_none")]
    pub start_index: Option<i32>,
    /// Gets or sets the owner id.
    #[serde(rename = "OwnerId", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<uuid::Uuid>,
}

impl ThemeMediaResult {
    /// Class ThemeMediaResult.
    pub fn new() -> ThemeMediaResult {
        ThemeMediaResult {
            items: None,
            total_record_count: None,
            start_index: None,
            owner_id: None,
        }
    }
}

