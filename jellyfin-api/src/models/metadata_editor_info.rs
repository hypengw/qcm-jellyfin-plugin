/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MetadataEditorInfo {
    #[serde(rename = "ParentalRatingOptions", skip_serializing_if = "Option::is_none")]
    pub parental_rating_options: Option<Vec<models::ParentalRating>>,
    #[serde(rename = "Countries", skip_serializing_if = "Option::is_none")]
    pub countries: Option<Vec<models::CountryInfo>>,
    #[serde(rename = "Cultures", skip_serializing_if = "Option::is_none")]
    pub cultures: Option<Vec<models::CultureDto>>,
    #[serde(rename = "ExternalIdInfos", skip_serializing_if = "Option::is_none")]
    pub external_id_infos: Option<Vec<models::ExternalIdInfo>>,
    #[serde(rename = "ContentType", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<Option<models::CollectionType>>,
    #[serde(rename = "ContentTypeOptions", skip_serializing_if = "Option::is_none")]
    pub content_type_options: Option<Vec<models::NameValuePair>>,
}

impl MetadataEditorInfo {
    pub fn new() -> MetadataEditorInfo {
        MetadataEditorInfo {
            parental_rating_options: None,
            countries: None,
            cultures: None,
            external_id_infos: None,
            content_type: None,
            content_type_options: None,
        }
    }
}

