/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TonemappingMode : Enum containing tonemapping modes.
/// Enum containing tonemapping modes.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TonemappingMode {
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "max")]
    Max,
    #[serde(rename = "rgb")]
    Rgb,
    #[serde(rename = "lum")]
    Lum,
    #[serde(rename = "itp")]
    Itp,

}

impl std::fmt::Display for TonemappingMode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Auto => write!(f, "auto"),
            Self::Max => write!(f, "max"),
            Self::Rgb => write!(f, "rgb"),
            Self::Lum => write!(f, "lum"),
            Self::Itp => write!(f, "itp"),
        }
    }
}

impl Default for TonemappingMode {
    fn default() -> TonemappingMode {
        Self::Auto
    }
}

