/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BufferRequestDto : Class BufferRequestDto.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BufferRequestDto {
    /// Gets or sets when the request has been made by the client.
    #[serde(rename = "When", skip_serializing_if = "Option::is_none")]
    pub when: Option<String>,
    /// Gets or sets the position ticks.
    #[serde(rename = "PositionTicks", skip_serializing_if = "Option::is_none")]
    pub position_ticks: Option<i64>,
    /// Gets or sets a value indicating whether the client playback is unpaused.
    #[serde(rename = "IsPlaying", skip_serializing_if = "Option::is_none")]
    pub is_playing: Option<bool>,
    /// Gets or sets the playlist item identifier of the playing item.
    #[serde(rename = "PlaylistItemId", skip_serializing_if = "Option::is_none")]
    pub playlist_item_id: Option<uuid::Uuid>,
}

impl BufferRequestDto {
    /// Class BufferRequestDto.
    pub fn new() -> BufferRequestDto {
        BufferRequestDto {
            when: None,
            position_ticks: None,
            is_playing: None,
            playlist_item_id: None,
        }
    }
}

