/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SendCommand : Class SendCommand.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SendCommand {
    /// Gets the group identifier.
    #[serde(rename = "GroupId", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<uuid::Uuid>,
    /// Gets the playlist identifier of the playing item.
    #[serde(rename = "PlaylistItemId", skip_serializing_if = "Option::is_none")]
    pub playlist_item_id: Option<uuid::Uuid>,
    /// Gets or sets the UTC time when to execute the command.
    #[serde(rename = "When", skip_serializing_if = "Option::is_none")]
    pub when: Option<String>,
    /// Gets the position ticks.
    #[serde(rename = "PositionTicks", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub position_ticks: Option<Option<i64>>,
    /// Gets the command.
    #[serde(rename = "Command", skip_serializing_if = "Option::is_none")]
    pub command: Option<models::SendCommandType>,
    /// Gets the UTC time when this command has been emitted.
    #[serde(rename = "EmittedAt", skip_serializing_if = "Option::is_none")]
    pub emitted_at: Option<String>,
}

impl SendCommand {
    /// Class SendCommand.
    pub fn new() -> SendCommand {
        SendCommand {
            group_id: None,
            playlist_item_id: None,
            when: None,
            position_ticks: None,
            command: None,
            emitted_at: None,
        }
    }
}

