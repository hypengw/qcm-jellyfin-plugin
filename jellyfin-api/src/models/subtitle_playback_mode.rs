/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SubtitlePlaybackMode : An enum representing a subtitle playback mode.
/// An enum representing a subtitle playback mode.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubtitlePlaybackMode {
    #[serde(rename = "Default")]
    Default,
    #[serde(rename = "Always")]
    Always,
    #[serde(rename = "OnlyForced")]
    OnlyForced,
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Smart")]
    Smart,

}

impl std::fmt::Display for SubtitlePlaybackMode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Default => write!(f, "Default"),
            Self::Always => write!(f, "Always"),
            Self::OnlyForced => write!(f, "OnlyForced"),
            Self::None => write!(f, "None"),
            Self::Smart => write!(f, "Smart"),
        }
    }
}

impl Default for SubtitlePlaybackMode {
    fn default() -> SubtitlePlaybackMode {
        Self::Default
    }
}

