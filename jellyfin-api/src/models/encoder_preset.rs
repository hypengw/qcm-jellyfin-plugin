/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EncoderPreset : Enum containing encoder presets.
/// Enum containing encoder presets.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EncoderPreset {
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "placebo")]
    Placebo,
    #[serde(rename = "veryslow")]
    Veryslow,
    #[serde(rename = "slower")]
    Slower,
    #[serde(rename = "slow")]
    Slow,
    #[serde(rename = "medium")]
    Medium,
    #[serde(rename = "fast")]
    Fast,
    #[serde(rename = "faster")]
    Faster,
    #[serde(rename = "veryfast")]
    Veryfast,
    #[serde(rename = "superfast")]
    Superfast,
    #[serde(rename = "ultrafast")]
    Ultrafast,

}

impl std::fmt::Display for EncoderPreset {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Auto => write!(f, "auto"),
            Self::Placebo => write!(f, "placebo"),
            Self::Veryslow => write!(f, "veryslow"),
            Self::Slower => write!(f, "slower"),
            Self::Slow => write!(f, "slow"),
            Self::Medium => write!(f, "medium"),
            Self::Fast => write!(f, "fast"),
            Self::Faster => write!(f, "faster"),
            Self::Veryfast => write!(f, "veryfast"),
            Self::Superfast => write!(f, "superfast"),
            Self::Ultrafast => write!(f, "ultrafast"),
        }
    }
}

impl Default for EncoderPreset {
    fn default() -> EncoderPreset {
        Self::Auto
    }
}

