/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LyricMetadata : LyricMetadata model.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LyricMetadata {
    /// Gets or sets the song artist.
    #[serde(rename = "Artist", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub artist: Option<Option<String>>,
    /// Gets or sets the album this song is on.
    #[serde(rename = "Album", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub album: Option<Option<String>>,
    /// Gets or sets the title of the song.
    #[serde(rename = "Title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    /// Gets or sets the author of the lyric data.
    #[serde(rename = "Author", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub author: Option<Option<String>>,
    /// Gets or sets the length of the song in ticks.
    #[serde(rename = "Length", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub length: Option<Option<i64>>,
    /// Gets or sets who the LRC file was created by.
    #[serde(rename = "By", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub by: Option<Option<String>>,
    /// Gets or sets the lyric offset compared to audio in ticks.
    #[serde(rename = "Offset", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub offset: Option<Option<i64>>,
    /// Gets or sets the software used to create the LRC file.
    #[serde(rename = "Creator", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub creator: Option<Option<String>>,
    /// Gets or sets the version of the creator used.
    #[serde(rename = "Version", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub version: Option<Option<String>>,
    /// Gets or sets a value indicating whether this lyric is synced.
    #[serde(rename = "IsSynced", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub is_synced: Option<Option<bool>>,
}

impl LyricMetadata {
    /// LyricMetadata model.
    pub fn new() -> LyricMetadata {
        LyricMetadata {
            artist: None,
            album: None,
            title: None,
            author: None,
            length: None,
            by: None,
            offset: None,
            creator: None,
            version: None,
            is_synced: None,
        }
    }
}

