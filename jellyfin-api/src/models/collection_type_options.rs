/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CollectionTypeOptions : The collection type options.
/// The collection type options.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CollectionTypeOptions {
    #[serde(rename = "movies")]
    Movies,
    #[serde(rename = "tvshows")]
    Tvshows,
    #[serde(rename = "music")]
    Music,
    #[serde(rename = "musicvideos")]
    Musicvideos,
    #[serde(rename = "homevideos")]
    Homevideos,
    #[serde(rename = "boxsets")]
    Boxsets,
    #[serde(rename = "books")]
    Books,
    #[serde(rename = "mixed")]
    Mixed,

}

impl std::fmt::Display for CollectionTypeOptions {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Movies => write!(f, "movies"),
            Self::Tvshows => write!(f, "tvshows"),
            Self::Music => write!(f, "music"),
            Self::Musicvideos => write!(f, "musicvideos"),
            Self::Homevideos => write!(f, "homevideos"),
            Self::Boxsets => write!(f, "boxsets"),
            Self::Books => write!(f, "books"),
            Self::Mixed => write!(f, "mixed"),
        }
    }
}

impl Default for CollectionTypeOptions {
    fn default() -> CollectionTypeOptions {
        Self::Movies
    }
}

