/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RemoteLyricInfoDto : The remote lyric info dto.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoteLyricInfoDto {
    /// Gets or sets the id for the lyric.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Gets the provider name.
    #[serde(rename = "ProviderName", skip_serializing_if = "Option::is_none")]
    pub provider_name: Option<String>,
    /// Gets the lyrics.
    #[serde(rename = "Lyrics", skip_serializing_if = "Option::is_none")]
    pub lyrics: Option<Box<models::LyricDto>>,
}

impl RemoteLyricInfoDto {
    /// The remote lyric info dto.
    pub fn new() -> RemoteLyricInfoDto {
        RemoteLyricInfoDto {
            id: None,
            provider_name: None,
            lyrics: None,
        }
    }
}

