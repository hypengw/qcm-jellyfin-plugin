/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccessSchedule : An entity representing a user's access schedule.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccessSchedule {
    /// Gets the id of this instance.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Gets the id of the associated user.
    #[serde(rename = "UserId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<uuid::Uuid>,
    /// Gets or sets the day of week.
    #[serde(rename = "DayOfWeek", skip_serializing_if = "Option::is_none")]
    pub day_of_week: Option<models::DynamicDayOfWeek>,
    /// Gets or sets the start hour.
    #[serde(rename = "StartHour", skip_serializing_if = "Option::is_none")]
    pub start_hour: Option<f64>,
    /// Gets or sets the end hour.
    #[serde(rename = "EndHour", skip_serializing_if = "Option::is_none")]
    pub end_hour: Option<f64>,
}

impl AccessSchedule {
    /// An entity representing a user's access schedule.
    pub fn new() -> AccessSchedule {
        AccessSchedule {
            id: None,
            user_id: None,
            day_of_week: None,
            start_hour: None,
            end_hour: None,
        }
    }
}

