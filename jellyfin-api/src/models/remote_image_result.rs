/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RemoteImageResult : Class RemoteImageResult.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RemoteImageResult {
    /// Gets or sets the images.
    #[serde(rename = "Images", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub images: Option<Option<Vec<models::RemoteImageInfo>>>,
    /// Gets or sets the total record count.
    #[serde(rename = "TotalRecordCount", skip_serializing_if = "Option::is_none")]
    pub total_record_count: Option<i32>,
    /// Gets or sets the providers.
    #[serde(rename = "Providers", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub providers: Option<Option<Vec<String>>>,
}

impl RemoteImageResult {
    /// Class RemoteImageResult.
    pub fn new() -> RemoteImageResult {
        RemoteImageResult {
            images: None,
            total_record_count: None,
            providers: None,
        }
    }
}

