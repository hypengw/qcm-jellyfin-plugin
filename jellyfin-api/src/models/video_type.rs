/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VideoType : Enum VideoType.
/// Enum VideoType.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VideoType {
    #[serde(rename = "VideoFile")]
    VideoFile,
    #[serde(rename = "Iso")]
    Iso,
    #[serde(rename = "Dvd")]
    Dvd,
    #[serde(rename = "BluRay")]
    BluRay,

}

impl std::fmt::Display for VideoType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::VideoFile => write!(f, "VideoFile"),
            Self::Iso => write!(f, "Iso"),
            Self::Dvd => write!(f, "Dvd"),
            Self::BluRay => write!(f, "BluRay"),
        }
    }
}

impl Default for VideoType {
    fn default() -> VideoType {
        Self::VideoFile
    }
}

