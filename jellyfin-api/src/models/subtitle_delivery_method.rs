/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SubtitleDeliveryMethod : Delivery method to use during playback of a specific subtitle format.
/// Delivery method to use during playback of a specific subtitle format.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubtitleDeliveryMethod {
    #[serde(rename = "Encode")]
    Encode,
    #[serde(rename = "Embed")]
    Embed,
    #[serde(rename = "External")]
    External,
    #[serde(rename = "Hls")]
    Hls,
    #[serde(rename = "Drop")]
    Drop,

}

impl std::fmt::Display for SubtitleDeliveryMethod {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Encode => write!(f, "Encode"),
            Self::Embed => write!(f, "Embed"),
            Self::External => write!(f, "External"),
            Self::Hls => write!(f, "Hls"),
            Self::Drop => write!(f, "Drop"),
        }
    }
}

impl Default for SubtitleDeliveryMethod {
    fn default() -> SubtitleDeliveryMethod {
        Self::Encode
    }
}

