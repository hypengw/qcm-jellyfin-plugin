/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FontFile : Class FontFile.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FontFile {
    /// Gets or sets the name.
    #[serde(rename = "Name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// Gets or sets the size.
    #[serde(rename = "Size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    /// Gets or sets the date created.
    #[serde(rename = "DateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Gets or sets the date modified.
    #[serde(rename = "DateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
}

impl FontFile {
    /// Class FontFile.
    pub fn new() -> FontFile {
        FontFile {
            name: None,
            size: None,
            date_created: None,
            date_modified: None,
        }
    }
}

