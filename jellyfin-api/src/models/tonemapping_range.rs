/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TonemappingRange : Enum containing tonemapping ranges.
/// Enum containing tonemapping ranges.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TonemappingRange {
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "tv")]
    Tv,
    #[serde(rename = "pc")]
    Pc,

}

impl std::fmt::Display for TonemappingRange {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Auto => write!(f, "auto"),
            Self::Tv => write!(f, "tv"),
            Self::Pc => write!(f, "pc"),
        }
    }
}

impl Default for TonemappingRange {
    fn default() -> TonemappingRange {
        Self::Auto
    }
}

