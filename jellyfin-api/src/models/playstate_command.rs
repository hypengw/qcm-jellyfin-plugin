/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PlaystateCommand : Enum PlaystateCommand.
/// Enum PlaystateCommand.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PlaystateCommand {
    #[serde(rename = "Stop")]
    Stop,
    #[serde(rename = "Pause")]
    Pause,
    #[serde(rename = "Unpause")]
    Unpause,
    #[serde(rename = "NextTrack")]
    NextTrack,
    #[serde(rename = "PreviousTrack")]
    PreviousTrack,
    #[serde(rename = "Seek")]
    Seek,
    #[serde(rename = "Rewind")]
    Rewind,
    #[serde(rename = "FastForward")]
    FastForward,
    #[serde(rename = "PlayPause")]
    PlayPause,

}

impl std::fmt::Display for PlaystateCommand {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Stop => write!(f, "Stop"),
            Self::Pause => write!(f, "Pause"),
            Self::Unpause => write!(f, "Unpause"),
            Self::NextTrack => write!(f, "NextTrack"),
            Self::PreviousTrack => write!(f, "PreviousTrack"),
            Self::Seek => write!(f, "Seek"),
            Self::Rewind => write!(f, "Rewind"),
            Self::FastForward => write!(f, "FastForward"),
            Self::PlayPause => write!(f, "PlayPause"),
        }
    }
}

impl Default for PlaystateCommand {
    fn default() -> PlaystateCommand {
        Self::Stop
    }
}

