/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuthenticationInfo {
    /// Gets or sets the identifier.
    #[serde(rename = "Id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    /// Gets or sets the access token.
    #[serde(rename = "AccessToken", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub access_token: Option<Option<String>>,
    /// Gets or sets the device identifier.
    #[serde(rename = "DeviceId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub device_id: Option<Option<String>>,
    /// Gets or sets the name of the application.
    #[serde(rename = "AppName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub app_name: Option<Option<String>>,
    /// Gets or sets the application version.
    #[serde(rename = "AppVersion", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub app_version: Option<Option<String>>,
    /// Gets or sets the name of the device.
    #[serde(rename = "DeviceName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub device_name: Option<Option<String>>,
    /// Gets or sets the user identifier.
    #[serde(rename = "UserId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<uuid::Uuid>,
    /// Gets or sets a value indicating whether this instance is active.
    #[serde(rename = "IsActive", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    /// Gets or sets the date created.
    #[serde(rename = "DateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Gets or sets the date revoked.
    #[serde(rename = "DateRevoked", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_revoked: Option<Option<String>>,
    #[serde(rename = "DateLastActivity", skip_serializing_if = "Option::is_none")]
    pub date_last_activity: Option<String>,
    #[serde(rename = "UserName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<Option<String>>,
}

impl AuthenticationInfo {
    pub fn new() -> AuthenticationInfo {
        AuthenticationInfo {
            id: None,
            access_token: None,
            device_id: None,
            app_name: None,
            app_version: None,
            device_name: None,
            user_id: None,
            is_active: None,
            date_created: None,
            date_revoked: None,
            date_last_activity: None,
            user_name: None,
        }
    }
}

