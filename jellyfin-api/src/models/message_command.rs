/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageCommand {
    #[serde(rename = "Header", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub header: Option<Option<String>>,
    #[serde(rename = "Text")]
    pub text: String,
    #[serde(rename = "TimeoutMs", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timeout_ms: Option<Option<i64>>,
}

impl MessageCommand {
    pub fn new(text: String) -> MessageCommand {
        MessageCommand {
            header: None,
            text,
            timeout_ms: None,
        }
    }
}

