/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemFilter : Enum ItemFilter.
/// Enum ItemFilter.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ItemFilter {
    #[serde(rename = "IsFolder")]
    IsFolder,
    #[serde(rename = "IsNotFolder")]
    IsNotFolder,
    #[serde(rename = "IsUnplayed")]
    IsUnplayed,
    #[serde(rename = "IsPlayed")]
    IsPlayed,
    #[serde(rename = "IsFavorite")]
    IsFavorite,
    #[serde(rename = "IsResumable")]
    IsResumable,
    #[serde(rename = "Likes")]
    Likes,
    #[serde(rename = "Dislikes")]
    Dislikes,
    #[serde(rename = "IsFavoriteOrLikes")]
    IsFavoriteOrLikes,

}

impl std::fmt::Display for ItemFilter {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::IsFolder => write!(f, "IsFolder"),
            Self::IsNotFolder => write!(f, "IsNotFolder"),
            Self::IsUnplayed => write!(f, "IsUnplayed"),
            Self::IsPlayed => write!(f, "IsPlayed"),
            Self::IsFavorite => write!(f, "IsFavorite"),
            Self::IsResumable => write!(f, "IsResumable"),
            Self::Likes => write!(f, "Likes"),
            Self::Dislikes => write!(f, "Dislikes"),
            Self::IsFavoriteOrLikes => write!(f, "IsFavoriteOrLikes"),
        }
    }
}

impl Default for ItemFilter {
    fn default() -> ItemFilter {
        Self::IsFolder
    }
}

