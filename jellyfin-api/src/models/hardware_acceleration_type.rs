/*
 * Jellyfin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 10.10.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// HardwareAccelerationType : Enum containing hardware acceleration types.
/// Enum containing hardware acceleration types.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HardwareAccelerationType {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "amf")]
    Amf,
    #[serde(rename = "qsv")]
    Qsv,
    #[serde(rename = "nvenc")]
    Nvenc,
    #[serde(rename = "v4l2m2m")]
    V4l2m2m,
    #[serde(rename = "vaapi")]
    Vaapi,
    #[serde(rename = "videotoolbox")]
    Videotoolbox,
    #[serde(rename = "rkmpp")]
    Rkmpp,

}

impl std::fmt::Display for HardwareAccelerationType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "none"),
            Self::Amf => write!(f, "amf"),
            Self::Qsv => write!(f, "qsv"),
            Self::Nvenc => write!(f, "nvenc"),
            Self::V4l2m2m => write!(f, "v4l2m2m"),
            Self::Vaapi => write!(f, "vaapi"),
            Self::Videotoolbox => write!(f, "videotoolbox"),
            Self::Rkmpp => write!(f, "rkmpp"),
        }
    }
}

impl Default for HardwareAccelerationType {
    fn default() -> HardwareAccelerationType {
        Self::None
    }
}

